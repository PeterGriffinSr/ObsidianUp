#!/bin/bash

REPO="PeterGriffinSr/Obsidian"
INSTALL_DIR="$HOME/.obsidian"
BIN_DIR="$HOME/.local/bin"
OBSIDIAN_BINARY="obsidian"

GREEN="\033[1;32m"
RED="\033[1;31m"
RESET="\033[0m"

DEPENDENCIES=("curl" "tar" "sha256sum" "jq")

function info {
    echo -e "${GREEN}$1${RESET}"
}

function error {
    echo -e "${RED}$1${RESET}" >&2
}

function check_dependencies {
    for dep in "${DEPENDENCIES[@]}"; do
        command -v "$dep" >/dev/null 2>&1 || { error "$dep is required but not installed. Aborting."; exit 1; }
    done
}

function install_dependencies {
    local packages=("libstdc++6" "clang-14" "build-essential")
    case "$1" in
        apt)
            sudo apt update -y && sudo apt install -y "${packages[@]}"
            ;;
        dnf)
            sudo dnf install -y "${packages[@]}"
            ;;
        pacman)
            sudo pacman -Sy --needed gcc llvm14 clang base-devel || { echo "yay -S gcc llvm14 clang base-devel"; }
            ;;
        *)
            error "Unsupported package manager: $1"
            exit 1
            ;;
    esac
}

function detect_package_manager {
    if command -v apt &> /dev/null; then
        install_dependencies "apt"
    elif command -v dnf &> /dev/null; then
        install_dependencies "dnf"
    elif command -v pacman &> /dev/null; then
        install_dependencies "pacman"
    else
        error "Unsupported Linux distribution."
        exit 1
    fi
}

function uninstall_obsidian {
    info "Uninstalling Obsidian..."
    rm -f "$BIN_DIR/$OBSIDIAN_BINARY" && info "Removed symlink $BIN_DIR/$OBSIDIAN_BINARY"
    rm -rf "$INSTALL_DIR" && info "Removed installation directory $INSTALL_DIR"

    local PROFILE_FILE=""
    case "$(basename "$SHELL")" in
        bash) PROFILE_FILE="$HOME/.bashrc" ;;
        zsh) PROFILE_FILE="$HOME/.zshrc" ;;
        fish) PROFILE_FILE="$HOME/.config/fish/config.fish" ;;
        *) error "Unsupported shell. Please remove $BIN_DIR from PATH manually."; return ;;
    esac

    sed -i "\|export PATH=\"$BIN_DIR:\$PATH\"|d" "$PROFILE_FILE" && info "Removed $BIN_DIR from PATH in $PROFILE_FILE"
    info "Obsidian uninstalled successfully."
    exit 0
}

if [ "$1" == "--uninstall" ]; then
    uninstall_obsidian
fi

check_dependencies

if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    detect_package_manager
elif [[ "$OSTYPE" == "darwin"* ]]; then
    info "Detected macOS. Installing dependencies..."
    brew update && brew install llvm@14 gcc || { error "Homebrew is required on macOS. Please install it."; exit 1; }
else
    error "Unsupported OS type: $OSTYPE"
    exit 1
fi

OS=$(uname -s | tr '[:upper:]' '[:lower:]')
ARCH=$(uname -m)
case $ARCH in
    x86_64) ARCH="x86_64";;
    aarch64) ARCH="arm64";;
    *) error "Unsupported architecture: $ARCH"; exit 1;;
esac

VERSION="${1:-latest}"
API_URL="https://api.github.com/repos/$REPO/releases"

VERSION="${1:-latest}"
API_URL="https://api.github.com/repos/$REPO/releases"

info "Fetching release info for $REPO (version: $VERSION)..."

if [ "$VERSION" == "latest" ]; then
    RELEASE_DATA=$(curl -s "$API_URL" | jq 'map(select(.prerelease or .draft == false)) | .[0]')
else
    RELEASE_DATA=$(curl -s "$API_URL" | jq "map(select(.tag_name == \"$VERSION\")) | .[0]")
fi

TAG_NAME=$(echo "$RELEASE_DATA" | jq -r '.tag_name')
if [ "$TAG_NAME" == "null" ] || [ -z "$TAG_NAME" ]; then
    error "Failed to fetch release info for version '$VERSION'. Aborting."
    exit 1
fi

info "Release found: $TAG_NAME"

EXPECTED_TARBALL_NAME="obsidian-${OS}-${ARCH}.tar.gz"
EXPECTED_CHECKSUM_NAME="${ARCH}.sha256"
TARBALL_URL=$(echo "$RELEASE_DATA" | jq -r ".assets[] | select(.name == \"$EXPECTED_TARBALL_NAME\") | .browser_download_url")
CHECKSUM_URL=$(echo "$RELEASE_DATA" | jq -r ".assets[] | select(.name == \"$EXPECTED_CHECKSUM_NAME\") | .browser_download_url")

if [ -z "$TARBALL_URL" ] || [ -z "$CHECKSUM_URL" ]; then
    error "Required assets (tarball or checksum) not found for this release. Aborting."
    exit 1
fi

info "Downloading assets for release $TAG_NAME..."
mkdir -p "$INSTALL_DIR" "$BIN_DIR"
curl -L -o "$INSTALL_DIR/$EXPECTED_TARBALL_NAME" "$TARBALL_URL"
curl -L -o "$INSTALL_DIR/$EXPECTED_CHECKSUM_NAME" "$CHECKSUM_URL"

info "Verifying checksum..."
cd "$INSTALL_DIR"
if ! sha256sum -c "$EXPECTED_CHECKSUM_NAME"; then
    error "Checksum verification failed. Aborting."
    rm -f "$EXPECTED_TARBALL_NAME" "$EXPECTED_CHECKSUM_NAME"
    exit 1
fi

info "Checksum verified. Extracting files..."
tar -xzvf "$EXPECTED_TARBALL_NAME" -C "$INSTALL_DIR"
EXTRACTED_BINARY="$INSTALL_DIR/obsidian-${OS}-${ARCH}"
ln -sf "$EXTRACTED_BINARY" "$BIN_DIR/$OBSIDIAN_BINARY" || { error "Failed to create symlink."; exit 1; }
rm -f "$EXPECTED_TARBALL_NAME" "$EXPECTED_CHECKSUM_NAME"

SHELL_NAME=$(basename "$SHELL")
PROFILE_FILE=""

case "$SHELL_NAME" in
    "bash")
        PROFILE_FILE="$HOME/.bashrc"
        ;;
    "zsh")
        PROFILE_FILE="$HOME/.zshrc"
        ;;
    "fish")
        PROFILE_FILE="$HOME/.config/fish/config.fish"
        ;;
    *)
        error "Unsupported shell: $SHELL_NAME. Please add $BIN_DIR to your PATH manually."
        exit 1
        ;;
esac

if ! grep -q "$BIN_DIR" "$PROFILE_FILE"; then
    echo "export PATH=\"$BIN_DIR:\$PATH\"" >> "$PROFILE_FILE"
    source "$PROFILE_NAME"
    info "Added $BIN_DIR to PATH in $PROFILE_FILE"
else
    info "$BIN_DIR is already in PATH in $PROFILE_FILE"
fi

info "Obsidian has been successfully installed!"
echo "Run 'obsidian --version' to verify the installation."
